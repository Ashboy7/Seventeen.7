// Fox AI: Full Stack App with OpenAI + Firebase

// 1. Initialize Firebase // File: firebase.js import { initializeApp } from "firebase/app"; import { getAuth } from "firebase/auth"; import { getFirestore } from "firebase/firestore";

const firebaseConfig = { apiKey: "YOUR_FIREBASE_API_KEY", authDomain: "YOUR_FIREBASE_PROJECT.firebaseapp.com", projectId: "YOUR_PROJECT_ID", storageBucket: "YOUR_BUCKET", messagingSenderId: "SENDER_ID", appId: "APP_ID" };

const app = initializeApp(firebaseConfig); export const auth = getAuth(app); export const db = getFirestore(app);

// 2. Express Server (server.js) const express = require('express'); const cors = require('cors'); const { Configuration, OpenAIApi } = require('openai'); require('dotenv').config();

const app = express(); app.use(cors()); app.use(express.json());

const configuration = new Configuration({ apiKey: process.env.OPENAI_API_KEY, }); const openai = new OpenAIApi(configuration);

app.post('/api/chat', async (req, res) => { const { prompt } = req.body; try { const response = await openai.createChatCompletion({ model: 'gpt-4', messages: [{ role: 'user', content: prompt }], }); res.json({ reply: response.data.choices[0].message.content }); } catch (error) { res.status(500).json({ error: error.message }); } });

app.post('/api/image', async (req, res) => { const { prompt } = req.body; try { const response = await openai.createImage({ prompt, n: 1, size: "512x512", }); res.json({ imageUrl: response.data.data[0].url }); }

